buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo1.maven.org/maven2" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/releases/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        // Updated version can be passed via command line arg as -PopenApiGeneratorVersion=VERSION
        classpath "org.openapitools:openapi-generator-gradle-plugin:6.2.1"
    }
}


plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'java'
    id 'idea'
    id "com.github.johnrengelman.processes" version "0.5.0"
}

group 'ru.dbelokursky'
version '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.springframework.boot:spring-boot-starter-test'
}


test {
    useJUnitPlatform()
}


def generatedDir = "${buildDir}/generated/sources"

sourceSets {
    main {
        java {
            srcDir generatedDir
        }
    }
}

idea {
    module {
        generatedSourceDirs.addAll(file(generatedDir))
    }
}

apply plugin: 'org.openapi.generator'
apply plugin: 'idea'


openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/task03/src/main/resources/specs/openapi.yml".toString()
    outputDir = "$buildDir/generated/sources".toString()
    apiPackage = "ru.dbelokursky.rest.api"
    modelPackage = "ru.dbelokursky.rest.model"

    globalProperties = [
            apis: "",
            models: "",
            supportingFiles: "ApiUtil.java"
    ]
}
//compileJava.dependsOn tasks.idea
compileJava.dependsOn tasks.openApiGenerate

